#summary This page refers to the public-portal interface of the Bungeni PIS application
#labels Phase-Requirements

= Introduction =
This page documents correspondence regarding the public portal interface.  


= Levels of Content =

_(jean)_ :

There will likely be three levels of content in the site: public content (such as background documents), content for members (such as committee working documents, that aren't destined for publication), and content in progress (such as news items and reports that have been submitted for publication, but not yet edited and approved by the site editor(s)). 

_(ashok)_ :

We need a physical separation between the "public" Plone and the "internal" Plone - the one which provides content for members and contains the work-in-progress applications.... I do remember you mentioning using RSS feeds -- and XML (using Entransit) to feed a public website ..... since for a real deployment we wouldnt want to put both the internal and external faces of the website on the same Plone installation or server.

_(jean)_ :

I believe we can treat these as separate issues:

  # Build a Plone with appropriate access rights for the various groups that will use it. 
  # Deploy a subset to a second Plone later on.

Deployment to a remote Plone doesn't have to impact configuring the internal Plone, and it's worthwhile doing the access rights properly from the start anyway.

_(jean)_ : *further notes on public plone portal*

This kind of thing is possible using e.g. feedfeeder -- using this, the public Plone would pull information from Atom feeds provided by the internal Plone. Feedfeeder creates content objects for the items in the feed. Other deployment possibilities are CMFDeployment (publishes static HTML) and Entransit (publishes to XML; incorporation of published transactions into public site would require work). However, federated Plone instances that seamlessly push/pull data between them aren't there yet.

