#summary How to install a development instance of Plone for Bungeni
#labels bungeni,plone


==1. Pre-requisites==

  * Build environment (on ubunutu do a `sudo apt-get install build-essentials` )
  * user Python 2.4 built from source. (on ubuntu /debian you will need to install development libaries/headers for imaging (libjpeg62-dev, libfreetype6-dev, libpng12-dev)  and bz2 (libbz2-dev) libraries) and for ssl support openssl and libssl (openssl, libssl-dev)
   

==2. SSL support for Python==

In ubuntu installing openssl and libssl-dev does not result in Python getting built with ssl support as the default ssl paths for include/ lib referenced by the Python build are different in Ubuntu. To build ssl support into Python on Ubuntu set the CPPFLAGS and LDFLAGS environment variables as follows :

{{{
 CPPFLAGS=-I/usr/include/openssl LDFLAGS=-L/usr/lib/ssl
}}}

now run ./configure ; make ; make install 

To test if python has ssl support run this in the python shell :

{{{
import urllib
f = urllib.urlopen('https://svn.openplans.org')
# if it returns no errors ... the ssl support works.. 
}}}

(tested on Ubuntu 8.04)


==Setup==

Note: 
the python setuptools package (a python egg) is used by buildout, if you have an older version of setuptools, you might need to update it manually first (from http://cheeseshop.python.org/pypi/setuptools/) in the python used for zope. 
Update instructions at: http://peak.telecommunity.com/DevCenter/EasyInstall#installation-instructions

If you dont have setuptools installed, buildout downloads and installs it automatically.

===Core Installation ===

In order to install it, use buildout. Plone for Bungeni is always installed within the Bungeni Buildout folder and resides in a sub-folder called plone:

{{{
$ cd bungeni_buildout_folder
$ svn co https://bungeni-portal.googlecode.com/svn/plone.buildout/trunk/ --username <username> plone
$ cd plone
$ python bootstrap.py # not the system python! The one you use with Plone, i.e. 2.4.x. 
$ ./bin/buildout  # wait a while..
}}}

Once this has successfully completed. Add the 1st user to plone - the admin user :
{{{
./bin/addzope2user admin password
}}}

Now edit the zope instance home variable to an absolute path pointing to the plone buildout folder :

{{{
## was %define INSTANCE .
%define INSTANCE /home/undesa/bungeni_portal/current/plone
}}}

Create a folder called var/filestorage :
{{{
mkdir -p ./var/filestorage
}}}

Now you can start plone :

{{{
./bin/paster serve etc/deploy.ini
}}}

=== Installing specific products used by Plone for Bungeni ===

Log in as the admin user into plone.

In the Zope ZMI create a new plone site called "site"

Use the profile


