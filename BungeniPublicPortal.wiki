#summary The public portal interface of the Bungeni PIS application
#labels Phase-Requirements

= Introduction =

Besides facilitating parliamentary work for members and staff, the
Bungeni PIS also has a public-facing side. This public portal interface
publishes information about the parliament on a website. The portal
content can be updated by parliamentary staff using normal Plone content
management functionality.

= Levels of access =

There will be different levels of access. At least the following:

 # *public* content (such as background documents),
 # *content for members* (such as committee working documents, that aren't destined for publication), and 
 # *content in progress* (such as news items and reports that have been submitted for publication, but not yet edited and approved by the site editor(s)). 

As an added level of security beyond that offered by Plone, public content can be copied to a different, public, server for serving.

This allows a physical separation between the "public" Plone and the "internal" Plone -- the one which provides content for members and contains the work-in-progress applications. 

Any server with access to Bungeni can obtain information using RSS feeds (any Plone folder or smart folder can publish RSS).

For more complete publishing, there are a number of Plone products that may be used (e.g. Entransit, CMFDeployment, PloneMultiSite).

Publishing to a remote server can be treated as a separate issue, which should not impact the configuration of the main portal. The two stages are:

  # Build a Plone with appropriate access rights for the various groups (including the public) that will use it. 
  # Deploy a subset to a second Plone later on.

= Remote deployment techniques in Plone =

This kind of thing is possible using e.g. feedfeeder -- using this, the public Plone would pull information from Atom feeds provided by the internal Plone. Feedfeeder creates content objects for the items in the feed. Other deployment possibilities are CMFDeployment (publishes static HTML) and Entransit (publishes to XML; incorporation of published transactions into public site would require work). However, federated Plone instances that seamlessly push/pull data between them aren't there yet.

