#summary How to install a development instance of Bungeni
#labels Featured

==Pre-requisites==

  * Build environment (on ubunutu do a `sudo apt-get install build-essentials` )
  * Python 2.5 (or 2.4) built from source. (on ubuntu you might need to install development libaries/headers for imaging and bz2 libraries)
  * PostGreSQL build from source requires development libraries/headers for bison, flex and readline. (on ubuntu installed via apt-get)

==Setup==

Note: 
the python setuptools package (a python egg) is used by buildout, if you have an older version of setuptools, you might need to update it manually first (from http://cheeseshop.python.org/pypi/setuptools/) in the python used for zope. 
Update instructions at: http://peak.telecommunity.com/DevCenter/EasyInstall#installation-instructions

If you dont have setuptools installed, buildout downloads and installs it automatically.

In order to install it, use buildout. These steps should be all you need to setup a Zope instance with all the required products and libraries:

{{{
$ svn co https://bungeni-portal.googlecode.com/svn/bungeni.buildout/trunk/ --username <username>
bungeni
$ cd bungeni
$ python bootstrap.py # not the system python! The one you use with Zope, i.e. 2.4.x. 
$ ./bin/buildout  # wait a while..
$ ./bin/setup-database # this will setup the postgres db
$ ./bin/paster serve debug.ini # this will launch the server in debug mode...
}}}

On a Mac, you may need to shmmax value to get postgresql up and running.

The buildout includes !DeadlockDebugger, so if you start Zope in debug mode, it will stop at a debugger prompt if an exception is raised. 


Also see ConfiguringBungeni.
 